{"$message_type":"diagnostic","message":"hidden type for `impl Iterator<Item = HashMap<String, String>>` captures lifetime that does not appear in bounds","code":{"code":"E0700","explanation":"The `impl Trait` return type captures lifetime parameters that do not\nappear within the `impl Trait` itself.\n\nErroneous code example:\n\n```compile_fail,E0700\nuse std::cell::Cell;\n\ntrait Trait<'a> { }\n\nimpl<'a, 'b> Trait<'b> for Cell<&'a u32> { }\n\nfn foo<'x, 'y>(x: Cell<&'x u32>) -> impl Trait<'y>\nwhere 'x: 'y\n{\n    x\n}\n```\n\nHere, the function `foo` returns a value of type `Cell<&'x u32>`,\nwhich references the lifetime `'x`. However, the return type is\ndeclared as `impl Trait<'y>` -- this indicates that `foo` returns\n\"some type that implements `Trait<'y>`\", but it also indicates that\nthe return type **only captures data referencing the lifetime `'y`**.\nIn this case, though, we are referencing data with lifetime `'x`, so\nthis function is in error.\n\nTo fix this, you must reference the lifetime `'x` from the return\ntype. For example, changing the return type to `impl Trait<'y> + 'x`\nwould work:\n\n```\nuse std::cell::Cell;\n\ntrait Trait<'a> { }\n\nimpl<'a,'b> Trait<'b> for Cell<&'a u32> { }\n\nfn foo<'x, 'y>(x: Cell<&'x u32>) -> impl Trait<'y> + 'x\nwhere 'x: 'y\n{\n    x\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":116,"byte_end":161,"line_start":6,"line_end":6,"column_start":6,"column_end":51,"is_primary":false,"text":[{"text":") -> impl Iterator<Item = HashMap<String, String>> {","highlight_start":6,"highlight_end":51}],"label":"opaque type defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":116,"byte_end":161,"line_start":6,"line_end":6,"column_start":6,"column_end":51,"is_primary":false,"text":[{"text":") -> impl Iterator<Item = HashMap<String, String>> {","highlight_start":6,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":53,"byte_end":88,"line_start":4,"line_end":4,"column_start":12,"column_end":47,"is_primary":false,"text":[{"text":"    goods: & [HashMap<String, Option<String>>],","highlight_start":12,"highlight_end":47}],"label":"hidden type `Map<std::slice::Iter<'_, HashMap<String, Option<String>>>, {closure@src/main.rs:7:22: 7:33}>` captures the anonymous lifetime defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":168,"byte_end":459,"line_start":7,"line_end":17,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    goods.iter().map(move |item| {","highlight_start":5,"highlight_end":35},{"text":"        let mut result = HashMap::new();","highlight_start":1,"highlight_end":41},{"text":"        ","highlight_start":1,"highlight_end":9},{"text":"        for &key in keys {","highlight_start":1,"highlight_end":27},{"text":"            if let Some(value) = item.get(key).and_then(|v| v.as_ref()) {","highlight_start":1,"highlight_end":74},{"text":"                result.insert(key.to_string(), value.clone());","highlight_start":1,"highlight_end":63},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        result","highlight_start":1,"highlight_end":15},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to declare that `impl Iterator<Item = HashMap<String, String>>` captures `'_`, you can introduce a named lifetime parameter `'a`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":40,"byte_end":40,"line_start":3,"line_end":3,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"fn field(","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":54,"byte_end":54,"line_start":4,"line_end":4,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    goods: & [HashMap<String, Option<String>>],","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":101,"byte_end":101,"line_start":5,"line_end":5,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"    keys: & [& str],","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":104,"byte_end":104,"line_start":5,"line_end":5,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"    keys: & [& str],","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":161,"byte_end":161,"line_start":6,"line_end":6,"column_start":51,"column_end":51,"is_primary":true,"text":[{"text":") -> impl Iterator<Item = HashMap<String, String>> {","highlight_start":51,"highlight_end":51}],"label":null,"suggested_replacement":" + 'a ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0700]\u001b[0m\u001b[0m\u001b[1m: hidden type for `impl Iterator<Item = HashMap<String, String>>` captures lifetime that does not appear in bounds\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    goods: & [HashMap<String, Option<String>>],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhidden type `Map<std::slice::Iter<'_, HashMap<String, Option<String>>>, {closure@src/main.rs:7:22: 7:33}>` captures the anonymous lifetime defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    keys: & [& str],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m) -> impl Iterator<Item = HashMap<String, String>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mopaque type defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    goods.iter().map(move |item| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut result = HashMap::new();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for &key in keys {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        result\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to declare that `impl Iterator<Item = HashMap<String, String>>` captures `'_`, you can introduce a named lifetime parameter `'a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mfn field\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    goods: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0m [HashMap<String, Option<String>>],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    keys: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0m [&\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0m str],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m) -> impl Iterator<Item = HashMap<String, String>>\u001b[0m\u001b[0m\u001b[38;5;10m + 'a \u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0700`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0700`.\u001b[0m\n"}
